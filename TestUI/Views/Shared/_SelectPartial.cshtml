@using TestUI.UI
@using TestUI.Components.Select

@model Select

<select class="nt-select-hidden-select" id="@Model.Id" name="@Model.Id" required="@Model.Required">
    <option value="" selected></option>
</select>

@if (Model.FloatingLabel)
{
    <div class="form-floating d-flex align-items-center nt-select-dropdown-toggler" data-bs-toggle="dropdown">
        <input class="form-control nt-select-dropdown-input dropdown-toggle shadow-none" readonly type="text" aria-expanded="false"
               placeholder="@Model.Placeholder" id="@Model.UniqueId" />
        <label for="@Model.UniqueId"><i class="@Model.StartIcon"></i> @Model.Label
            @if (Model.Required)
            {
                <span class="text-danger">*</span>
            }
        </label>
        <button type="button" class="btn btn-sm shadow-none nt-select-toggle-button"><i class="bi bi-chevron-down"></i></button>
    </div>

}
else
{
    @if (!string.IsNullOrWhiteSpace(Model.Label))
    {
        <label class="form-label" for="@Model.UniqueId">
            @Model.Label
            @if (Model.Required)
            {
                <span class="text-danger">*</span>
            }
        </label>
    }
    <div class="d-flex align-items-center nt-select-dropdown-toggler h-100" data-bs-toggle="dropdown">
        @if (!string.IsNullOrWhiteSpace(Model.StartIcon))
        {
            <div class="nt-select-start-icon"><i class="@Model.StartIcon"></i></div>
        }
        <input class="form-control @GetInputSize() nt-select-dropdown-input dropdown-toggle shadow-none h-100" readonly type="text"
               placeholder="@Model.Placeholder" id="@Model.UniqueId" />
        <button type="button" class="btn btn-sm shadow-none nt-select-toggle-button"><i class="bi bi-chevron-down"></i></button>
    </div>
}



<div class="dropdown-menu w-100 shadow-sm nt-select-dropdown-menu">
    <div class="nt-select-list-content" tabindex="-1">
        @Model.ChildContent
    </div>
</div>

@functions {
    string GetInputSize()
    {
        return Model.Size == ComponentSize.Small ? "form-control-sm" : Model.Size == ComponentSize.Large ? "form-control-lg" : "";
    }
}